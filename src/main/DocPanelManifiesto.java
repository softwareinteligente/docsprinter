package main;

import com.google.gson.JsonObject;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.KeyboardFocusManager;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextPane;

public class DocPanelManifiesto extends DocPanel {

	public DocPanelManifiesto () {
		initComponents ();
		docType = "manifiesto";
		imageIcon = (ImageIcon) imageLabel.getIcon ();
		this.setConstraintsToTextAreas ();
		
	}

	public void setConstraintsToTextAreas () {
		this.txt00.setFontSize ("large");
		this.txt00.setText (docNumber);
		
		// Database for "vehiculo"
		addKeyListenerForVehiculo (txt04, txt05, txt06, txt07);
		addKeyListenerForVehiculo (txt09, txt10, txt11, txt12);
		
		// Databese for "conductor"		
		addKeyListenerForConductor (txt13, txt14, txt15, txt16, txt17);
		addKeyListenerForConductor (txt18, txt19, txt20, txt21, txt22);		
	}
	
	public void addKeyListenerForConductor (DocText txtNombre, DocText txtId, DocText txtNacionalidad, DocText txtLicencia, DocText txtLibreta){
			txtId.addKeyListener (new KeyAdapter () {
			public void keyPressed (KeyEvent e) {
				if (e.getKeyCode () != KeyEvent.VK_ENTER) {
					super.keyPressed (e);
					return;
				}
				if (e.isControlDown () && e.getKeyCode () == KeyEvent.VK_ENTER) {
					System.out.println (">>> Actualizando un nuevo conductor desde el texto:" + txtId.getText ());
					String id = txtId.getText ();
					String nombre = txtNombre.getText ();
					String nacionalidad = txtNacionalidad.getText ();
					String licencia = txtLicencia.getText ();
					String libreta = txtLibreta.getText ();
					DocDB.updateConductor (DocGlobals.database, id, nombre, nacionalidad, licencia, libreta);
				} else if (e.getKeyCode () == KeyEvent.VK_ENTER) {
					String id = txtId.getText ();
					JsonObject result = DocDB.searchConductor (DocGlobals.database, id);
					if (result != null) {
						txtNombre.setText (getValue (result, "nombre"));
						txtNacionalidad.setText (getValue (result, "nacionalidad"));
						txtLicencia.setText (getValue (result, "licencia"));
						txtLibreta.setText (getValue (result, "libreta"));
					}
				}
				e.consume ();
			}
		});	
	}
	
	// Get value from JsonObject result
	public String getValue (JsonObject result, String key) {
		if (result.get (key)==null)
			return "";
		else
			return result.get (key).getAsString ();
	}
	
	// Search, update, add data for vehiculo 
	public void addKeyListenerForVehiculo (DocText txtMarca, DocText txtModelo, DocText txtPlaca, DocText txtChasis) {
			txtPlaca.addKeyListener (new KeyAdapter () {
			public void keyPressed (KeyEvent e) {
				if (e.getKeyCode () != KeyEvent.VK_ENTER) {
					super.keyPressed (e);
					return;
				}
				
				if (e.isControlDown () && e.getKeyCode () == KeyEvent.VK_ENTER) {
					System.out.println (">>> Actualizando un nuevo vehiculo desde:" + txt06.getText ());
					String[] parts = txtPlaca.getText ().split ("[\\s-.]+");
					String placa = parts.length > 0 ? parts[0] : null;
					String pais = parts.length > 1 ? parts[1] : null;
					String marca = txtMarca.getText ();
					String fabricacion = txtModelo.getText ();
					String chasis = txtChasis.getText ();
					DocDB.updateVehiculo (DocGlobals.database, placa, marca, pais, fabricacion, chasis);
				} else if (e.getKeyCode () == KeyEvent.VK_ENTER) {
					System.out.println (">>> Consultando un vehiculo desde: " + txtPlaca.getText ());
					String[] parts = txtPlaca.getText ().split ("[\\-\\s\\.]");
					String placa = parts.length > 0 ? parts[0] : null;
					JsonObject result = DocDB.searchVehiculo (DocGlobals.database, placa);
					if (result != null) {
						String pais = result.get ("pais")==null? "" : " - " + result.get("pais").getAsString ();
						txtPlaca.setText (placa + pais);
						txtMarca.setText (result.get ("marca").getAsString ());
						txtModelo.setText (result.get ("fabricacion").getAsString ());
						txtChasis.setText (result.get ("chasis").getAsString ());
					}
				}
				e.consume ();
			}
		});		
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    txt00 = new main.DocText();
    txt01 = new main.DocText();
    txt02 = new main.DocText();
    txt03 = new main.DocText();
    txt04 = new main.DocText();
    txt05 = new main.DocText();
    txt06 = new main.DocText();
    txt07 = new main.DocText();
    txt08 = new main.DocText();
    txt09 = new main.DocText();
    txt10 = new main.DocText();
    txt11 = new main.DocText();
    txt12 = new main.DocText();
    txt13 = new main.DocText();
    txt14 = new main.DocText();
    txt15 = new main.DocText();
    txt16 = new main.DocText();
    txt17 = new main.DocText();
    txt18 = new main.DocText();
    txt19 = new main.DocText();
    txt20 = new main.DocText();
    txt21 = new main.DocText();
    txt22 = new main.DocText();
    txt23 = new main.DocText();
    txt24 = new main.DocText();
    txt25_1 = new main.DocText();
    txt25_2 = new main.DocText();
    txt25_3 = new main.DocText();
    txt25_4 = new main.DocText();
    txt25_5 = new main.DocText();
    txt26 = new main.DocText();
    txt27 = new main.DocText();
    txt28 = new main.DocText();
    txt29 = new main.DocText();
    txt30 = new main.DocText();
    txt31 = new main.DocText();
    txt32_1 = new main.DocText();
    txt32_2 = new main.DocText();
    txt32_3 = new main.DocText();
    txt32_4 = new main.DocText();
    txt33_1 = new main.DocText();
    txt33_2 = new main.DocText();
    txt34 = new main.DocText();
    txt35 = new main.DocText();
    txt36 = new main.DocText();
    txt37 = new main.DocText();
    txt38 = new main.DocText();
    txt39 = new main.DocText();
    txt40 = new main.DocText();
    imageLabel = new javax.swing.JLabel();

    setBackground(new java.awt.Color(255, 255, 255));
    setLayout(null);
    add(txt00);
    txt00.setBounds(840, 80, 210, 35);
    add(txt01);
    txt01.setBounds(45, 165, 510, 157);
    add(txt02);
    txt02.setBounds(565, 165, 492, 65);
    add(txt03);
    txt03.setBounds(565, 257, 492, 65);
    add(txt04);
    txt04.setBounds(45, 362, 258, 28);
    add(txt05);
    txt05.setBounds(309, 362, 142, 28);
    add(txt06);
    txt06.setBounds(456, 362, 286, 28);
    add(txt07);
    txt07.setBounds(746, 362, 311, 28);
    add(txt08);
    txt08.setBounds(260, 395, 797, 20);
    add(txt09);
    txt09.setBounds(45, 455, 258, 28);
    add(txt10);
    txt10.setBounds(309, 455, 142, 28);
    add(txt11);
    txt11.setBounds(457, 455, 284, 28);
    add(txt12);
    txt12.setBounds(747, 455, 310, 28);
    add(txt13);
    txt13.setBounds(45, 519, 477, 22);
    add(txt14);
    txt14.setBounds(45, 564, 217, 22);
    add(txt15);
    txt15.setBounds(269, 564, 254, 22);
    add(txt16);
    txt16.setBounds(45, 608, 217, 22);
    add(txt17);
    txt17.setBounds(270, 608, 252, 22);
    add(txt18);
    txt18.setBounds(528, 519, 529, 22);
    add(txt19);
    txt19.setBounds(528, 564, 259, 22);
    add(txt20);
    txt20.setBounds(793, 564, 264, 22);
    add(txt21);
    txt21.setBounds(528, 608, 259, 22);
    add(txt22);
    txt22.setBounds(793, 608, 264, 22);
    add(txt23);
    txt23.setBounds(45, 669, 477, 22);
    add(txt24);
    txt24.setBounds(528, 669, 529, 22);
    add(txt25_1);
    txt25_1.setBounds(145, 715, 25, 22);
    add(txt25_2);
    txt25_2.setBounds(425, 715, 25, 22);
    add(txt25_3);
    txt25_3.setBounds(568, 715, 25, 22);
    add(txt25_4);
    txt25_4.setBounds(693, 715, 25, 22);
    add(txt25_5);
    txt25_5.setBounds(792, 700, 265, 55);
    add(txt26);
    txt26.setBounds(45, 791, 477, 22);
    add(txt27);
    txt27.setBounds(528, 791, 529, 22);
    add(txt28);
    txt28.setBounds(45, 850, 110, 348);
    add(txt29);
    txt29.setBounds(160, 850, 364, 348);
    add(txt30);
    txt30.setBounds(528, 850, 112, 348);
    add(txt31);
    txt31.setBounds(644, 850, 137, 348);
    add(txt32_1);
    txt32_1.setBounds(788, 850, 85, 348);
    add(txt32_2);
    txt32_2.setBounds(788, 1206, 85, 30);
    add(txt32_3);
    txt32_3.setBounds(880, 850, 85, 348);
    add(txt32_4);
    txt32_4.setBounds(880, 1206, 85, 30);
    add(txt33_1);
    txt33_1.setBounds(972, 850, 85, 348);
    add(txt33_2);
    txt33_2.setBounds(972, 1206, 85, 30);
    add(txt34);
    txt34.setBounds(45, 1220, 660, 17);
    add(txt35);
    txt35.setBounds(45, 1258, 477, 32);
    add(txt36);
    txt36.setBounds(45, 1316, 477, 40);
    add(txt37);
    txt37.setBounds(528, 1258, 260, 20);
    add(txt38);
    txt38.setBounds(793, 1258, 264, 20);
    add(txt39);
    txt39.setBounds(169, 1359, 353, 20);
    add(txt40);
    txt40.setBounds(528, 1310, 529, 54);

    imageLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/image-manifiesto-vacio-NTA.png"))); // NOI18N
    imageLabel.setAlignmentY(0.0F);
    add(imageLabel);
    imageLabel.setBounds(0, 0, 1100, 1424);
  }// </editor-fold>//GEN-END:initComponents


  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JLabel imageLabel;
  private main.DocText txt00;
  private main.DocText txt01;
  private main.DocText txt02;
  private main.DocText txt03;
  private main.DocText txt04;
  private main.DocText txt05;
  private main.DocText txt06;
  private main.DocText txt07;
  private main.DocText txt08;
  private main.DocText txt09;
  private main.DocText txt10;
  private main.DocText txt11;
  private main.DocText txt12;
  private main.DocText txt13;
  private main.DocText txt14;
  private main.DocText txt15;
  private main.DocText txt16;
  private main.DocText txt17;
  private main.DocText txt18;
  private main.DocText txt19;
  private main.DocText txt20;
  private main.DocText txt21;
  private main.DocText txt22;
  private main.DocText txt23;
  private main.DocText txt24;
  private main.DocText txt25_1;
  private main.DocText txt25_2;
  private main.DocText txt25_3;
  private main.DocText txt25_4;
  private main.DocText txt25_5;
  private main.DocText txt26;
  private main.DocText txt27;
  private main.DocText txt28;
  private main.DocText txt29;
  private main.DocText txt30;
  private main.DocText txt31;
  private main.DocText txt32_1;
  private main.DocText txt32_2;
  private main.DocText txt32_3;
  private main.DocText txt32_4;
  private main.DocText txt33_1;
  private main.DocText txt33_2;
  private main.DocText txt34;
  private main.DocText txt35;
  private main.DocText txt36;
  private main.DocText txt37;
  private main.DocText txt38;
  private main.DocText txt39;
  private main.DocText txt40;
  // End of variables declaration//GEN-END:variables

	public static void main (String args[]) {
		JFrame frame = new JFrame ("Test for Manifierto Panel");
		frame.setContentPane (new JScrollPane (new DocPanelManifiesto ()));
		frame.setSize (1100, 800);
		frame.setVisible (true);

	}

	public DocText getTxt00 () {
		return txt00;
	}

	public DocText getTxt01 () {
		return txt01;
	}

	public DocText getTxt02 () {
		return txt02;
	}

	public DocText getTxt03 () {
		return txt03;
	}

	public DocText getTxt04 () {
		return txt04;
	}

	public DocText getTxt05 () {
		return txt05;
	}

	public DocText getTxt06 () {
		return txt06;
	}

	public DocText getTxt07 () {
		return txt07;
	}

	public DocText getTxt08 () {
		return txt08;
	}

	public DocText getTxt09 () {
		return txt09;
	}

	public DocText getTxt10 () {
		return txt10;
	}

	public DocText getTxt11 () {
		return txt11;
	}

	public DocText getTxt12 () {
		return txt12;
	}

	public DocText getTxt13 () {
		return txt13;
	}

	public DocText getTxt14 () {
		return txt14;
	}

	public DocText getTxt15 () {
		return txt15;
	}

	public DocText getTxt16 () {
		return txt16;
	}

	public DocText getTxt17 () {
		return txt17;
	}

	public DocText getTxt18 () {
		return txt18;
	}

	public DocText getTxt19 () {
		return txt19;
	}

	public DocText getTxt20 () {
		return txt20;
	}

	public DocText getTxt21 () {
		return txt21;
	}

	public DocText getTxt22 () {
		return txt22;
	}

	public DocText getTxt23 () {
		return txt23;
	}

	public DocText getTxt24 () {
		return txt24;
	}

	public DocText getTxt25_1 () {
		return txt25_1;
	}

	public DocText getTxt25_2 () {
		return txt25_2;
	}

	public DocText getTxt25_3 () {
		return txt25_3;
	}

	public DocText getTxt25_4 () {
		return txt25_4;
	}

	public DocText getTxt25_5 () {
		return txt25_5;
	}

	public DocText getTxt26 () {
		return txt26;
	}

	public DocText getTxt27 () {
		return txt27;
	}

	public DocText getTxt28 () {
		return txt28;
	}

	public DocText getTxt29 () {
		return txt29;
	}

	public DocText getTxt30 () {
		return txt30;
	}

	public DocText getTxt31 () {
		return txt31;
	}

	public DocText getTxt32_1 () {
		return txt32_1;
	}

	public DocText getTxt32_2 () {
		return txt32_2;
	}

	public DocText getTxt32_3 () {
		return txt32_3;
	}

	public DocText getTxt32_4 () {
		return txt32_4;
	}

	public DocText getTxt33_1 () {
		return txt33_1;
	}

	public DocText getTxt33_2 () {
		return txt33_2;
	}

	public DocText getTxt34 () {
		return txt34;
	}

	public DocText getTxt35 () {
		return txt35;
	}

	public DocText getTxt36 () {
		return txt36;
	}

	public DocText getTxt37 () {
		return txt37;
	}

	public DocText getTxt38 () {
		return txt38;
	}

	public DocText getTxt39 () {
		return txt39;
	}

	public DocText getTxt40 () {
		return txt40;
	}

}
